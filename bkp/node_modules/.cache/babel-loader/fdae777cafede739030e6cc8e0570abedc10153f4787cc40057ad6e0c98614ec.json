{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\help\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport SecondPage from './components/SecondPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n    document.body.classList.toggle('dark-mode', isDarkMode);\n  }, []);\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode);\n    document.body.classList.toggle('dark-mode', newDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            darkMode: darkMode,\n            toggleDarkMode: toggleDarkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/second-page\",\n          element: /*#__PURE__*/_jsxDEV(SecondPage, {\n            darkMode: darkMode,\n            toggleDarkMode: toggleDarkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","HomePage","SecondPage","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","isDarkMode","localStorage","getItem","document","body","classList","toggle","toggleDarkMode","newDarkMode","setItem","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/help/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport SecondPage from './components/SecondPage';\nimport './App.css';\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n    document.body.classList.toggle('dark-mode', isDarkMode);\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode);\n    document.body.classList.toggle('dark-mode', newDarkMode);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={<HomePage darkMode={darkMode} toggleDarkMode={toggleDarkMode} />} \n          />\n          <Route \n            path=\"/second-page\" \n            element={<SecondPage darkMode={darkMode} toggleDarkMode={toggleDarkMode} />} \n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAC9DH,WAAW,CAACC,UAAU,CAAC;IACvBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEN,UAAU,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAG,CAACV,QAAQ;IAC7BC,WAAW,CAACS,WAAW,CAAC;IACxBP,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAED,WAAW,CAAC;IAC7CL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEE,WAAW,CAAC;EAC1D,CAAC;EAED,oBACEb,OAAA,CAACN,MAAM;IAAAqB,QAAA,eACLf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBf,OAAA,CAACJ,MAAM;QAAAmB,QAAA,gBACLf,OAAA,CAACL,KAAK;UACJsB,IAAI,EAAC,GAAG;UACRC,OAAO,eAAElB,OAAA,CAACH,QAAQ;YAACM,QAAQ,EAAEA,QAAS;YAACS,cAAc,EAAEA;UAAe;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACFtB,OAAA,CAACL,KAAK;UACJsB,IAAI,EAAC,cAAc;UACnBC,OAAO,eAAElB,OAAA,CAACF,UAAU;YAACK,QAAQ,EAAEA,QAAS;YAACS,cAAc,EAAEA;UAAe;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACpB,EAAA,CAhCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}