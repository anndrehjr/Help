{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Sun, Moon } from 'lucide-react';\nimport '../styles/HomePage.css';\nconst HomePage = ({\n  darkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [company, setCompany] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name && company) {\n      localStorage.setItem('inputName', name);\n      localStorage.setItem('inputEmpresa', company);\n      const newRecord = {\n        name,\n        company\n      };\n      const records = JSON.parse(localStorage.getItem('records') || '[]');\n      records.push(newRecord);\n      localStorage.setItem('records', JSON.stringify(records));\n      alert('Dados adicionados com sucesso! Você será redirecionado.');\n      navigate('/second-page');\n    } else {\n      alert('Por favor, preencha todos os campos.');\n    }\n  };\n  return React.createElement('div', {\n    id: 'Inicio',\n    className: darkMode ? 'dark-mode' : ''\n  }, React.createElement('main', {\n    className: 'Inicio-001'\n  }, React.createElement('h1', null, 'Começa Aqui !!!'), React.createElement('form', {\n    onSubmit: handleSubmit\n  }, React.createElement('div', {\n    className: 'form-group'\n  }, React.createElement('input', {\n    id: 'inputName',\n    type: 'text',\n    placeholder: 'Insira seu nome...',\n    value: name,\n    onChange: e => setName(e.target.value),\n    autoComplete: 'off'\n  })), React.createElement('div', {\n    className: 'form-group'\n  }, React.createElement('input', {\n    id: 'inputEmpresa',\n    type: 'text',\n    placeholder: 'Insira o nome da empresa...',\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    autoComplete: 'off'\n  })), React.createElement('button', {\n    type: 'submit',\n    id: 'submitButton'\n  }, 'Salvar'))), React.createElement('button', {\n    onClick: toggleDarkMode,\n    className: 'dark-mode-toggle'\n  }, darkMode ? React.createElement(Sun) : React.createElement(Moon)), React.createElement('footer', null, '© Andre Junior ~ Dev'));\n};\n_s(HomePage, \"Ca0GWxmo0w1GYLySDXjN+BBaZoI=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useNavigate","Sun","Moon","HomePage","darkMode","toggleDarkMode","_s","name","setName","company","setCompany","navigate","handleSubmit","event","preventDefault","localStorage","setItem","newRecord","records","JSON","parse","getItem","push","stringify","alert","React","createElement","id","className","onSubmit","type","placeholder","value","onChange","e","target","autoComplete","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/help/src/components/SecondPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Sun, Moon } from 'lucide-react';\nimport '../styles/HomePage.css';\n\nconst HomePage = ({ darkMode, toggleDarkMode }) => {\n  const [name, setName] = useState('');\n  const [company, setCompany] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name && company) {\n      localStorage.setItem('inputName', name);\n      localStorage.setItem('inputEmpresa', company);\n      \n      const newRecord = { name, company };\n      const records = JSON.parse(localStorage.getItem('records') || '[]');\n      records.push(newRecord);\n      localStorage.setItem('records', JSON.stringify(records));\n\n      alert('Dados adicionados com sucesso! Você será redirecionado.');\n      navigate('/second-page');\n    } else {\n      alert('Por favor, preencha todos os campos.');\n    }\n  };\n\n  return React.createElement('div', { id: 'Inicio', className: darkMode ? 'dark-mode' : '' },\n    React.createElement('main', { className: 'Inicio-001' },\n      React.createElement('h1', null, 'Começa Aqui !!!'),\n      React.createElement('form', { onSubmit: handleSubmit },\n        React.createElement('div', { className: 'form-group' },\n          React.createElement('input', {\n            id: 'inputName',\n            type: 'text',\n            placeholder: 'Insira seu nome...',\n            value: name,\n            onChange: (e) => setName(e.target.value),\n            autoComplete: 'off'\n          })\n        ),\n        React.createElement('div', { className: 'form-group' },\n          React.createElement('input', {\n            id: 'inputEmpresa',\n            type: 'text',\n            placeholder: 'Insira o nome da empresa...',\n            value: company,\n            onChange: (e) => setCompany(e.target.value),\n            autoComplete: 'off'\n          })\n        ),\n        React.createElement('button', { type: 'submit', id: 'submitButton' }, 'Salvar')\n      )\n    ),\n    React.createElement('button', { \n      onClick: toggleDarkMode, \n      className: 'dark-mode-toggle' \n    }, darkMode ? React.createElement(Sun) : React.createElement(Moon)),\n    React.createElement('footer', null, '© Andre Junior ~ Dev')\n  );\n};\n\nexport default HomePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}